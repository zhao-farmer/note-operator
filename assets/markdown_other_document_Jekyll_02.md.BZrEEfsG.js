import{_ as l,c as e,o as s,a0 as t}from"./chunks/framework.zS86-xgI.js";const i="/note-operator/other/document/jekyll/001.png",n="/note-operator/other/document/jekyll/002.png",r="/note-operator/other/document/jekyll/003.png",p="/note-operator/other/document/jekyll/004.png",o="/note-operator/other/document/jekyll/005.png",_=JSON.parse('{"title":"二、安装与测试","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/other/document/Jekyll/02.md","filePath":"markdown/other/document/Jekyll/02.md"}'),h={name:"markdown/other/document/Jekyll/02.md"};function k(d,a,y,c,g,m){return s(),e("div",null,a[0]||(a[0]=[t('<h1 id="二、安装与测试" tabindex="-1">二、安装与测试 <a class="header-anchor" href="#二、安装与测试" aria-label="Permalink to &quot;二、安装与测试&quot;">​</a></h1><p>Jekyll 网站 提供了 Linux、MacOS 和 Windows 安装说明。<a href="https://jekyllrb.com/docs/" target="_blank" rel="noreferrer">可点击跳转到官网查看</a></p><p>一般情况下，我们会将Jekyll项目拉取到本地，编写，调试，然后再推送到仓库上。 那么，我们有必要了解下如何在本地调试Jekyll项目。</p><h2 id="_2-1-配置ruby环境" tabindex="-1">2.1 配置Ruby环境 <a class="header-anchor" href="#_2-1-配置ruby环境" aria-label="Permalink to &quot;2.1 配置Ruby环境&quot;">​</a></h2><p>在 Windows 下配置 Ruby 环境，安装 RubyInstaller 即可。</p><p>RubyInstaller 是一个基于 Windows 的安装程序，包括了 Ruby、运行环境等。</p><p>从 <a href="https://rubyinstaller.org/downloads/" target="_blank" rel="noreferrer">RubyInstaller Downloads</a>下载 Ruby+Devkit，选择推荐版本，使用默认配置安装。</p><p><img src="'+i+'" alt="" data-fancybox="gallery"></p><p>安装完成之后，CMD 中输入 ruby -v 或者 gem -v，有输出版本即代表安装成功。</p><p><img src="'+n+'" alt="" data-fancybox="gallery"></p><h2 id="_2-2-安装-jekyll" tabindex="-1">2.2 安装 Jekyll <a class="header-anchor" href="#_2-2-安装-jekyll" aria-label="Permalink to &quot;2.2 安装 Jekyll&quot;">​</a></h2><p>有了 Ruby 环境以及 RubyGems 就可以安装 Jekyll。 在命令行输入如下命令安装Jekyll：gem install jekyll。</p><p><img src="'+r+'" alt="" data-fancybox="gallery"></p><p>安装之后，输入 jekyll -v 检查是否安装成功。</p><p><img src="'+p+`" alt="" data-fancybox="gallery"></p><h2 id="_2-3-构建jekyll项目" tabindex="-1">2.3 构建Jekyll项目 <a class="header-anchor" href="#_2-3-构建jekyll项目" aria-label="Permalink to &quot;2.3 构建Jekyll项目&quot;">​</a></h2><p>注意：下文将讲述如何使用GitLink平台一键构建及部署Jekyll项目。</p><p>创建一个全新的工程，执行如下命令：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jekyll</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> learn-jekyll</span></span></code></pre></div><p>执行完成之后，我们就成功创建了一个名为 learn-jekyll 的 Jekyll 项目。</p><h2 id="_2-4-启动-jekyll-服务" tabindex="-1">2.4 启动 Jekyll 服务 <a class="header-anchor" href="#_2-4-启动-jekyll-服务" aria-label="Permalink to &quot;2.4 启动 Jekyll 服务&quot;">​</a></h2><p>Jekyll 环境搭建完成之后，进入到项目目录下（有 _config.yml 文件的目录），</p><p>输入启动命令：jekyll serve 或者 jekyll s。</p><p>出现异常可能是缺少这些组件</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minima</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tzinfo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tzinfo-data</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wdm</span></span></code></pre></div><p>若没有异常，启动服务后的默认端口为 4000，浏览器地址栏输入 localhost:4000 即可访问。</p><p><img src="`+o+'" alt="" data-fancybox="gallery"></p><p>启动服务时使用命令：jekyll s --drafts，可以同时访问草稿（_drafts）目录下的文章。</p>',28)]))}const b=l(h,[["render",k]]);export{_ as __pageData,b as default};
