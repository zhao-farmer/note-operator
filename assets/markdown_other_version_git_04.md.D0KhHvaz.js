import{_ as t,c as r,o as e,a0 as o}from"./chunks/framework.zS86-xgI.js";const i="/note-operator/other/version/git/git-version-01.png",s="/note-operator/other/version/git/git-version-02.png",n="/note-operator/other/version/git/git-version-03.png",p="/note-operator/other/version/git/git-version-04.png",l="/note-operator/other/version/git/git-version-05.png",g="/note-operator/other/version/git/git-version-06.png",h="/note-operator/other/version/git/git-version-07.png",c="/note-operator/other/version/git/git-version-08.png",d="/note-operator/other/version/git/git-version-09.png",_="/note-operator/other/version/git/git-version-10.png",m="/note-operator/other/version/git/git-version-11.png",b="/note-operator/other/version/git/git-version-12.png",u="/note-operator/other/version/git/git-version-13.png",v="/note-operator/other/version/git/git-version-14.png",y="/note-operator/other/version/git/git-version-15.png",f="/note-operator/other/version/git/git-version-16.png",x="/note-operator/other/version/git/git-version-17.png",q="/note-operator/other/version/git/git-version-18.png",k="/note-operator/other/version/git/git-version-19.png",P="/note-operator/other/version/git/git-version-20.png",F="/note-operator/other/version/git/git-version-21.png",A="/note-operator/other/version/git/git-version-22.png",C="/note-operator/other/version/git/git-version-23.png",E="/note-operator/other/version/git/git-version-24.png",D="/note-operator/other/version/git/git-version-25.png",B="/note-operator/other/version/git/git-version-26.png",H="/note-operator/other/version/git/git-version-27.png",S="/note-operator/other/version/git/git-version-28.png",T="/note-operator/other/version/git/git-version-29.png",G="/note-operator/other/version/git/git-version-30.png",$="/note-operator/other/version/git/git-version-31.png",w="/note-operator/other/version/git/git-version-32.png",N="/note-operator/other/version/git/git-version-33.png",V="/note-operator/other/version/git/git-version-34.png",M=JSON.parse('{"title":"四、Git之版本号","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/other/version/git/04.md","filePath":"markdown/other/version/git/04.md"}'),I={name:"markdown/other/version/git/04.md"};function J(O,a,R,j,z,K){return e(),r("div",null,a[0]||(a[0]=[o('<h1 id="四、git之版本号" tabindex="-1">四、Git之版本号 <a class="header-anchor" href="#四、git之版本号" aria-label="Permalink to &quot;四、Git之版本号&quot;">​</a></h1><h2 id="_4-1、概述" tabindex="-1">4.1、概述 <a class="header-anchor" href="#_4-1、概述" aria-label="Permalink to &quot;4.1、概述&quot;">​</a></h2><p>每一次提交，Git 都会生成相关的版本号；每个版本号由 40 位 16 进制的数字组成。</p><p>这 40 位 16 进制的数字，是根据提交的内容，通过 SHA-1 算法计算出来的。</p><p>版本号具体还分为两部分，前 2 位是目录名，后 38 位是文件名。</p><h2 id="_4-2、文件操作" tabindex="-1">4.2、文件操作 <a class="header-anchor" href="#_4-2、文件操作" aria-label="Permalink to &quot;4.2、文件操作&quot;">​</a></h2><h3 id="_4-2-1、初始化本地库" tabindex="-1">4.2.1、初始化本地库 <a class="header-anchor" href="#_4-2-1、初始化本地库" aria-label="Permalink to &quot;4.2.1、初始化本地库&quot;">​</a></h3><p><img src="'+i+'" alt="" data-fancybox="gallery"></p><p>如上图所示，刚创建的 Git 本地仓库没有提交信息，也没有版本号。</p><h3 id="_4-2-2、新增文件并提交" tabindex="-1">4.2.2、新增文件并提交 <a class="header-anchor" href="#_4-2-2、新增文件并提交" aria-label="Permalink to &quot;4.2.2、新增文件并提交&quot;">​</a></h3><p><img src="'+s+'" alt="" data-fancybox="gallery"></p><p>如上图所示，新增文件并提交后，通过 git reflog 命令可以查到对应的（精简）提交版本号：7896eb8</p><h3 id="_4-2-3、根据版本号查找第一次提交的文件" tabindex="-1">4.2.3、根据版本号查找第一次提交的文件 <a class="header-anchor" href="#_4-2-3、根据版本号查找第一次提交的文件" aria-label="Permalink to &quot;4.2.3、根据版本号查找第一次提交的文件&quot;">​</a></h3><p><img src="'+n+'" alt="" data-fancybox="gallery"></p><p>因为版本号的前 2 位是目录名，后 38 位是文件名；所以可以快速定位出文件所在的位置。</p><p><img src="'+p+'" alt="" data-fancybox="gallery"></p><p>如上图所示，直接打开文件时，内容是一堆乱码。</p><p><img src="'+l+'" alt="" data-fancybox="gallery"></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat-file</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 版本号</span></span></code></pre></div><p>如上图所示，使用命令行指令才能读取版本号对应的文件内容。</p><p>可以看到，该文件内容并没有提交的文件的内容信息，但有另一个版本号。</p><p><img src="'+g+'" alt="" data-fancybox="gallery"></p><p>如上图所示，读取上文发现的新版本号，还是没有提交的文件的内容信息，但又有新的版本号，而且对应提交的文件的名称。</p><p><img src="'+h+'" alt="" data-fancybox="gallery"> 如上图所示，读取上文发现的新版本号，可以看到了提交的文件的内容信息。</p><h3 id="_4-2-4、第一次提交的版本号图解" tabindex="-1">4.2.4、第一次提交的版本号图解 <a class="header-anchor" href="#_4-2-4、第一次提交的版本号图解" aria-label="Permalink to &quot;4.2.4、第一次提交的版本号图解&quot;">​</a></h3><p><img src="'+c+'" alt="" data-fancybox="gallery"></p><p>如上图所示，提交日志中的版本号所对应的文件，包含的内容是状态信息的版本号；</p><p>状态信息的版本号所对应的文件，包含的内容是本次提交版本的全部文件的版本号。</p><h3 id="_4-2-5、修改文件并提交" tabindex="-1">4.2.5、修改文件并提交 <a class="header-anchor" href="#_4-2-5、修改文件并提交" aria-label="Permalink to &quot;4.2.5、修改文件并提交&quot;">​</a></h3><p><img src="'+d+'" alt="" data-fancybox="gallery"> 如上图所示，修改文件并提交后，通过 git reflog 命令可以查到对应的（精简）提交版本号：774e05f</p><h3 id="_4-2-6、根据版本号查找第二次提交的文件" tabindex="-1">4.2.6、根据版本号查找第二次提交的文件 <a class="header-anchor" href="#_4-2-6、根据版本号查找第二次提交的文件" aria-label="Permalink to &quot;4.2.6、根据版本号查找第二次提交的文件&quot;">​</a></h3><p><img src="'+_+'" alt="" data-fancybox="gallery"></p><p>如上图所示，根据第二次提交的版本号，可以查出本次提交的状态信息的版本号（tree）和上一次（即第一次）提交的版本号（parent）。</p><p><img src="'+m+'" alt="" data-fancybox="gallery"></p><p>如上图所示，根据状态信息的版本号，可以查出本次提交版本的全部文件的版本号。</p><blockquote><p>注意：修改后的a.txt文件的版本号已经变了，没有修改的b.txt文件的版本号和原来的一样。</p></blockquote><p><img src="'+b+'" alt="" data-fancybox="gallery"></p><p>如上图所示，修改后的a.txt文件的内容已经从“111”变为“333”了，没有修改的b.txt文件的内容还是原来的“222”。</p><h3 id="_4-2-7、第二次提交的版本号图解" tabindex="-1">4.2.7、第二次提交的版本号图解 <a class="header-anchor" href="#_4-2-7、第二次提交的版本号图解" aria-label="Permalink to &quot;4.2.7、第二次提交的版本号图解&quot;">​</a></h3><p><img src="'+u+'" alt="" data-fancybox="gallery"></p><p>如上图所示，所谓的修改文件，实质是新增了一个版本号不同但名称相同的文件，然后再新增一个状态版本用来记录新的文件版本号列表。</p><p>实际上，原来的文件还存在，这也是为什么能实现版本回退（穿梭）的原因。</p><h3 id="_4-2-8、删除文件并提交" tabindex="-1">4.2.8、删除文件并提交 <a class="header-anchor" href="#_4-2-8、删除文件并提交" aria-label="Permalink to &quot;4.2.8、删除文件并提交&quot;">​</a></h3><p><img src="'+v+'" alt="" data-fancybox="gallery"><img src="'+y+'" alt="" data-fancybox="gallery"></p><p>如上图所示，删除文件并提交后，通过 git reflog 命令可以查到对应的（精简）提交版本号：a140418</p><h3 id="_4-2-9、根据版本号查找第三次提交的文件" tabindex="-1">4.2.9、根据版本号查找第三次提交的文件 <a class="header-anchor" href="#_4-2-9、根据版本号查找第三次提交的文件" aria-label="Permalink to &quot;4.2.9、根据版本号查找第三次提交的文件&quot;">​</a></h3><p><img src="'+f+'" alt="" data-fancybox="gallery"></p><p>如上图所示，根据第三次提交的版本号，可以查出本次提交的状态信息的版本号（tree）和上一次（即第二次）提交的版本号（parent）。</p><p><img src="'+x+'" alt="" data-fancybox="gallery"></p><p>如上图所示，根据状态信息的版本号，可以查出本次提交版本的全部文件的版本号。</p><blockquote><p>注意：已删除的b.txt文件的版本号已经没了，没删除的a.txt文件的版本号还在。</p></blockquote><p><img src="'+q+'" alt="" data-fancybox="gallery"></p><h3 id="_4-2-10、第三次提交的版本号图解" tabindex="-1">4.2.10、第三次提交的版本号图解 <a class="header-anchor" href="#_4-2-10、第三次提交的版本号图解" aria-label="Permalink to &quot;4.2.10、第三次提交的版本号图解&quot;">​</a></h3><p><img src="'+k+'" alt="" data-fancybox="gallery"></p><p>如上图所示，所谓的删除文件，实质是新增一个状态版本用来记录新的文件版本号列表。</p><p>实际上，原来的文件还存在，这也是为什么能实现版本回退（穿梭）的原因。</p><h2 id="_4-3、分支操作" tabindex="-1">4.3、分支操作 <a class="header-anchor" href="#_4-3、分支操作" aria-label="Permalink to &quot;4.3、分支操作&quot;">​</a></h2><h3 id="_4-3-1、head文件" tabindex="-1">4.3.1、HEAD文件 <a class="header-anchor" href="#_4-3-1、head文件" aria-label="Permalink to &quot;4.3.1、HEAD文件&quot;">​</a></h3><p><img src="'+P+'" alt="" data-fancybox="gallery"></p><p>HEAD文件中，记录了当前分支版本文件（本例为 master 分支）的路径。</p><h3 id="_4-3-2、master分支版本文件" tabindex="-1">4.3.2、master分支版本文件 <a class="header-anchor" href="#_4-3-2、master分支版本文件" aria-label="Permalink to &quot;4.3.2、master分支版本文件&quot;">​</a></h3><p><img src="'+F+'" alt="" data-fancybox="gallery"> master分支版本文件中，记录了该分支的最新提交版本号。</p><h3 id="_4-3-3、master分支版本图解" tabindex="-1">4.3.3、master分支版本图解 <a class="header-anchor" href="#_4-3-3、master分支版本图解" aria-label="Permalink to &quot;4.3.3、master分支版本图解&quot;">​</a></h3><p><img src="'+A+'" alt="" data-fancybox="gallery"></p><h3 id="_4-3-4、创建新分支user" tabindex="-1">4.3.4、创建新分支user <a class="header-anchor" href="#_4-3-4、创建新分支user" aria-label="Permalink to &quot;4.3.4、创建新分支user&quot;">​</a></h3><p><img src="'+C+'" alt="" data-fancybox="gallery"></p><p>如上图所示，创建新分支user后，也多了一个分支版本文件user。</p><p><img src="'+E+'" alt="" data-fancybox="gallery"></p><p>如上图所示，新创建的user分支版本文件中记录的该分支的最新提交版本号，和master分支版本文件记录的别无二致。</p><h3 id="_4-3-5、新创建的user分支版本图解" tabindex="-1">4.3.5、新创建的user分支版本图解 <a class="header-anchor" href="#_4-3-5、新创建的user分支版本图解" aria-label="Permalink to &quot;4.3.5、新创建的user分支版本图解&quot;">​</a></h3><p><img src="'+D+'" alt="" data-fancybox="gallery"></p><h3 id="_4-3-6、切换到user新分支" tabindex="-1">4.3.6、切换到user新分支 <a class="header-anchor" href="#_4-3-6、切换到user新分支" aria-label="Permalink to &quot;4.3.6、切换到user新分支&quot;">​</a></h3><p><img src="'+B+'" alt="" data-fancybox="gallery"><img src="'+H+'" alt="" data-fancybox="gallery"></p><p>如上图所示，切换到user分支后，HEAD文件中记录的当前分支版本文件的路径是user分支版本文件的路径。</p><h3 id="_4-3-7、切换后的user分支版本图解" tabindex="-1">4.3.7、切换后的user分支版本图解 <a class="header-anchor" href="#_4-3-7、切换后的user分支版本图解" aria-label="Permalink to &quot;4.3.7、切换后的user分支版本图解&quot;">​</a></h3><p><img src="'+S+'" alt="" data-fancybox="gallery"></p><h3 id="_4-3-8、user分支新增文件并提交" tabindex="-1">4.3.8、user分支新增文件并提交 <a class="header-anchor" href="#_4-3-8、user分支新增文件并提交" aria-label="Permalink to &quot;4.3.8、user分支新增文件并提交&quot;">​</a></h3><p><img src="'+T+'" alt="" data-fancybox="gallery"><img src="'+G+'" alt="" data-fancybox="gallery"></p><p>如上图所示，user分支新增文件并提交后，user分支版本文件中记录的该分支的最新提交版本号，和master分支版本文件记录的不一样了。</p><h3 id="_4-3-9、新增文件后的user分支版本图解" tabindex="-1">4.3.9、新增文件后的user分支版本图解 <a class="header-anchor" href="#_4-3-9、新增文件后的user分支版本图解" aria-label="Permalink to &quot;4.3.9、新增文件后的user分支版本图解&quot;">​</a></h3><p><img src="'+$+'" alt="" data-fancybox="gallery"></p><h3 id="_4-3-10、切换回master分支" tabindex="-1">4.3.10、切换回master分支 <a class="header-anchor" href="#_4-3-10、切换回master分支" aria-label="Permalink to &quot;4.3.10、切换回master分支&quot;">​</a></h3><p><img src="'+w+'" alt="" data-fancybox="gallery"></p><p>如上图所示，切换回master分支后，HEAD文件中记录的当前分支版本文件的路径是master分支版本文件的路径。</p><p><img src="'+N+'" alt="" data-fancybox="gallery"></p><p>此外，master分支的工作目录中，并没有显示在user分支时新增的c.txt文件，说明在user分支的操作不会影响到master分支。</p><h3 id="_4-3-11、切换回的master分支版本图解" tabindex="-1">4.3.11、切换回的master分支版本图解 <a class="header-anchor" href="#_4-3-11、切换回的master分支版本图解" aria-label="Permalink to &quot;4.3.11、切换回的master分支版本图解&quot;">​</a></h3><p><img src="'+V+'" alt="" data-fancybox="gallery"></p>',88)]))}const Q=t(I,[["render",J]]);export{M as __pageData,Q as default};
