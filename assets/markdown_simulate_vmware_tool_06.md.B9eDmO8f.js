import{_ as a,c as i,o as l,a0 as t}from"./chunks/framework.zS86-xgI.js";const n="/note-operator/simulate/vmware/tool/032.png",e="/note-operator/simulate/vmware/tool/033.png",p="/note-operator/simulate/vmware/tool/034.png",o="/note-operator/simulate/vmware/tool/035.png",r="/note-operator/simulate/vmware/tool/036.png",h="/note-operator/simulate/vmware/tool/037.png",d="/note-operator/simulate/vmware/tool/038.png",k="/note-operator/simulate/vmware/tool/039.png",c="/note-operator/simulate/vmware/tool/040.png",g="/note-operator/simulate/vmware/tool/041.png",m="/note-operator/simulate/vmware/tool/042.png",y="/note-operator/simulate/vmware/tool/043.png",u="/note-operator/simulate/vmware/tool/044.png",F="/note-operator/simulate/vmware/tool/045.png",w="/note-operator/simulate/vmware/tool/046.png",b="/note-operator/simulate/vmware/tool/047.png",C="/note-operator/simulate/vmware/tool/048.png",E=JSON.parse('{"title":"错误指南","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/simulate/vmware/tool/06.md","filePath":"markdown/simulate/vmware/tool/06.md"}'),_={name:"markdown/simulate/vmware/tool/06.md"};function v(f,s,x,B,A,D){return l(),i("div",null,s[0]||(s[0]=[t('<h1 id="错误指南" tabindex="-1">错误指南 <a class="header-anchor" href="#错误指南" aria-label="Permalink to &quot;错误指南&quot;">​</a></h1><h2 id="_1-关于window能上网-linux连主机都ping不通" tabindex="-1">1. 关于window能上网，linux连主机都ping不通 <a class="header-anchor" href="#_1-关于window能上网-linux连主机都ping不通" aria-label="Permalink to &quot;1. 关于window能上网，linux连主机都ping不通&quot;">​</a></h2><ol><li>找到windows主机的ip信息</li></ol><p><img src="'+n+'" alt="" data-fancybox="gallery"></p><ol start="2"><li>修改linux主机的默认网关</li></ol><p><img src="'+e+'" alt="" data-fancybox="gallery"></p><ol start="3"><li>修改后重启网络，完美</li></ol><p><img src="'+p+'" alt="" data-fancybox="gallery"></p><h2 id="_2-windows服务器端口外网联不通" tabindex="-1">2. windows服务器端口外网联不通 <a class="header-anchor" href="#_2-windows服务器端口外网联不通" aria-label="Permalink to &quot;2. windows服务器端口外网联不通&quot;">​</a></h2><ol><li>找到防火墙中的出站规则</li></ol><p><img src="'+o+'" alt="" data-fancybox="gallery"></p><p><img src="'+r+'" alt="" data-fancybox="gallery"></p><ol start="2"><li>新建出站规则</li></ol><p><img src="'+h+'" alt="" data-fancybox="gallery"></p><ol start="3"><li>规则详情</li></ol><p><img src="'+d+'" alt="" data-fancybox="gallery"></p><p><img src="'+k+'" alt="" data-fancybox="gallery"></p><p><img src="'+c+'" alt="" data-fancybox="gallery"></p><p><img src="'+g+'" alt="" data-fancybox="gallery"></p><p><img src="'+m+'" alt="" data-fancybox="gallery"></p><h2 id="_3-windows虚拟机-ping不通-主机" tabindex="-1">3. windows虚拟机 ping不通 主机 <a class="header-anchor" href="#_3-windows虚拟机-ping不通-主机" aria-label="Permalink to &quot;3. windows虚拟机 ping不通 主机&quot;">​</a></h2><p>打开控制面板→Windows防火墙→高级设置→入站规则→找“打印机回显”字段的规则→右键启用规则即可</p><p>具体规则名称如下：</p><p><img src="'+y+'" alt="" data-fancybox="gallery"></p><h2 id="_4-windows-设置静态ip" tabindex="-1">4. windows 设置静态IP <a class="header-anchor" href="#_4-windows-设置静态ip" aria-label="Permalink to &quot;4. windows 设置静态IP&quot;">​</a></h2><ol><li>从控制面板选择使用的网络</li></ol><p><img src="'+u+'" alt="" data-fancybox="gallery"></p><ol start="2"><li>选择属性</li></ol><p><img src="'+F+'" alt="" data-fancybox="gallery"></p><ol start="3"><li>选择IPV4</li></ol><p><img src="'+w+'" alt="" data-fancybox="gallery"></p><ol start="4"><li>配置静态IP</li></ol><p><img src="'+b+'" alt="" data-fancybox="gallery"></p><ol start="5"><li>保存并验证</li></ol><p><img src="'+C+`" alt="" data-fancybox="gallery"></p><h2 id="_5-linux-防火墙问题" tabindex="-1">5. linux 防火墙问题 <a class="header-anchor" href="#_5-linux-防火墙问题" aria-label="Permalink to &quot;5. linux 防火墙问题&quot;">​</a></h2><ol><li><p>防火墙的基本操作</p><ul><li>启动、关闭和重启防火墙</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 关闭防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld</span></span></code></pre></div><ul><li>查看防火墙状态</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用systemctl命令查看防火墙状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用firewall-cmd命令查看防火墙状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --state</span></span></code></pre></div></li></ol><ul><li><p>设置防火墙开机启动或禁用</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置开机启动防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置开机禁用防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld###</span></span></code></pre></div></li></ul><ol start="2"><li><p>配置防火墙端口</p><ul><li>查看开放的端口</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用\`firewall-cmd\`命令查看当前开放的端口：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list-ports</span></span></code></pre></div><ul><li>开启防火墙端口</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 永久开启端口（以80端口为例）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-port=80/tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permanent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 临时开启端口（仅对当前会话有效）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-port=80/tcp</span></span></code></pre></div><blockquote><p>注意：添加端口后，需要执行firewall-cmd --reload命令重新加载配置才能生效。</p></blockquote><ul><li>关闭防火墙端口</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 永久关闭端口（以80端口为例）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --remove-port=80/tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permanent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 关闭端口后也需要执行命令重新加载配置。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --reload</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 临时关闭端口（仅对当前会话有效）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --remove-port=80/tcp</span></span></code></pre></div><blockquote><p>注意：firewalld没有直接的临时关闭端口的命令，通常通过移除并重新加载配置实现</p></blockquote></li></ol>`,39)]))}const P=a(_,[["render",v]]);export{E as __pageData,P as default};
