import{_ as a,c as e,o as n,a0 as p}from"./chunks/framework.zS86-xgI.js";const h=JSON.parse('{"title":"五、静态资源 - Public 文件","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/other/document/vuepress/05.md","filePath":"markdown/other/document/vuepress/05.md"}'),i={name:"markdown/other/document/vuepress/05.md"};function t(l,s,o,c,r,d){return n(),e("div",null,s[0]||(s[0]=[p(`<h1 id="五、静态资源-public-文件" tabindex="-1">五、静态资源 - Public 文件 <a class="header-anchor" href="#五、静态资源-public-文件" aria-label="Permalink to &quot;五、静态资源 - Public 文件&quot;">​</a></h1><p>你可以把一些静态资源放在 Public 目录中，它们会被复制到最终生成的网站的根目录下。</p><p>默认的 Public 目录是 .vuepress/public ，可以通过 public 配置项来修改。</p><p>在下列这些情况中，你可能会用到它：</p><ul><li>你可能需要提供一些静态资源，但是它们并不直接被你的 Markdown 文件引用，比如 favicon 和 PWA 图标。</li><li>你可能想要托管一些共享的静态资源，甚至可能需要在你的网站外部引用它，比如 Logo 图片。</li><li>你可能想在你的 Markdown 内容中通过绝对路径来引入图片。</li></ul><p>以我们文档的源文件为例，我们把 VuePress 的 Logo 放在了 Public 目录下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>└─ docs</span></span>
<span class="line"><span>   ├─ .vuepress</span></span>
<span class="line"><span>   |  └─ public</span></span>
<span class="line"><span>   |     └─ images</span></span>
<span class="line"><span>   |        └─ hero.png  # &lt;- Logo 文件</span></span>
<span class="line"><span>   └─ guide</span></span>
<span class="line"><span>      └─ assets.md       # &lt;- 我们在这里</span></span></code></pre></div><p>我们可以这样在当前页面引用 Logo ：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>![VuePress Logo](/images/hero.png)</span></span></code></pre></div>`,9)]))}const b=a(i,[["render",t]]);export{h as __pageData,b as default};
